<section class="njt game content group">
  <section class="game-field">
    <header class="group">
      <div class="damage_token" data-fd="true"></div>
      <h3><%= @game.phase.split("_").map(&:capitalize).join(" ") %></h3>
      <button>Quit</button>
    </header>

    <section class="board group">
      <figure class="white damage">
        <ul class="white tokens">
          <% @white.damage_tokens.each do |token| %>
            <li class="damage_token"
              <% if @player == @white %>
                data-value="<%= token.value %>"
                data-fd="<%= token.fake %>"
              <% else %>
                data-fd="true"
              <% end %>
            ></li>
          <% end %>
        </ul>
        <ul class="white info">
          <li class="group">
            <div class="group"><%= image_tag @white.user.avatar.url(:thumb)%></div>
            <strong><%= @white.user.username %></strong>
          </li>
          <li><%= "#{@white.cards.count} cards" %></li>
          <li><%= "#{@white.damage_tokens.count} tokens"%></li>
        </ul>
      </figure>

      <figure class="board">
        <%= image_tag 'fullboard.png'%>
        <ul class="spaces group">
          <li class="tank" id="white-1"></li>
          <li class="tank" id="white-2"></li>
          <li class="tank" id="white-3"></li>
          <li class="tank" id="black-3"></li>
          <li class="tank" id="black-2"></li>
          <li class="tank" id="black-1"></li>
        </ul>
      </figure>

      <figure class="black damage">
        <ul class="black tokens">
          <% @black.damage_tokens.each do |token| %>
            <li class="damage_token"
              <% if @player == @black %>
                data-value="<%= token.value %>"
                data-fd="<%= token.fake %>"
              <% else %>
                data-fd="true"
              <% end %>
            ></li>
          <% end %>
        </ul>

        <ul class="black info">
          <li><%= image_tag @black.user.avatar.url(:thumb) %>
            <strong><%= @black.user.username %></strong></li>
          <li><%= "#{@black.cards.count} cards" %></li>
          <li><%= "#{@black.damage_tokens.count} tokens"%></li>
        </ul>
      </figure>
    </section>


    <section class="main-cards group">
      <div class="deck card" data-fd="true"></div>

      <button class="undo flow" disabled="true">Undo</button>

      <figure class="active" id="active-1">
        <nav class="group hidden">
          <button class="feint not-chosen"></button>
          <button class="move chosen"></button>
        </nav>
        <div class="play" id="play-1"></div>
      </figure>

      <figure class="active" id="active-2">
        <nav class="group hidden">
          <button class="feint not-chosen"></button>
          <button class="move chosen"></button>
        </nav>
        <div class="play" id="play-2"></div>
      </figure>

      <figure class="confirm-warning">
        <button class="confirm flow" disabled="true">Confirm</button>
        <div class="warning hidden"></div>
      </figure>

      <div
      <% if @discards %>
           class="discard card <%= "shot-down" unless @discards.last.shot %>"
           data-info="<%="#{@discards.last.value}-#{@discards.last.dir}"%>"
      <% else %>
           class="discard"
      <% end %>
      ></div>
    </section>

    <ul class="hand group slot">
      <% @player.cards.each do |card|%>
        <li class="card <%= "shot-down" unless card.shot %>"
          data-info="<%= "#{card.value}-#{card.dir}" %>">
        </li>
      <% end %>
    </ul>
  </section>

  <aside class="chat">
    <h3>Chat</h3>
    <% @game.comments.each do |comment| %>
      <%= render "comments/show", locals: {comment: comment}%>
    <% end %>
  </aside>
</section>

<script>
var Game = (function(){
  var playerColor = "<%= @color %>";
  var damage = "<%= @player.damage %>";
  var tanks = [];

  <% [[@white, "white"], [@black, "black"]].each do |(player, color)| %>
    <% if player.tanks.count > 1 && @player != player %>

      <% player.tanks.each do |tank| %>
        tanks.push({
          space: "<%= "#{color}-#{tank.position}" %>",
          color: "<%= color %>",
          fake: "true"
        })
      <% end %>

    <% else %>

      <% player.tanks.each do |tank| %>
        tanks.push({
          space: "<%= "#{color}-#{tank.position}" %>",
          color: "<%= color %>",
          fake: "<%= tank.fake %>"
        })
      <% end %>

    <% end %>
  <% end %>

  var totalDamage = function(){
    $("." + playerColor + ".info").append("<li>" + damage + " damage</li>");
  };

  var tankDisplay = function(){
    tanks.forEach(function(tank){
      var $space = $("#" + tank.space)

      if (tank.color == "white"){
        $space.html("<img src=<%= asset_path("whitetank.png") %>>")
      } else {
        $space.html("<img src=<%= asset_path("blacktank.png") %>>")
      }

      if (tank.fake === "true") {
        $space.find("img").css("opacity", "0.5")
      }
    })
  };

  var bindCards = function(){
    $(".card").on("click", function(){

      if ($(this).hasClass('noclick')) {
        $(this).removeClass('noclick');
      } else {
        $(this).toggleClass("shot-down")
      }
    })

    $(".card").draggable({
      snap: ".slot",
      cursor: "move",
      start: function(event, ui) {$(this).addClass('noclick')},
    })
  };

  var display = function(){
    totalDamage();
    tankDisplay();
    bindCards();
  };

  var activate = function(phase) {
    switch(phase) {
    case "draw":
      phaseDraw();
      break;
    case "play":
      phasePlay();
      break;
    case "move":
      resolveMoves();
      break;
    case "shoot":
      resolveShots();
      break;
    case "end?":
      checkEnd();
      break;
    case "discard":
      phaseDiscard();
      break;
    case "game_over":
      gameOver();
      break;
    }
  }

  var phaseDraw = function() {

  }
  var phasePlay = function() {
    dropify($("#play-1"), play1Up, play1Down)
  }

  var play1Up = function(event, ui) {
    dropify($("#play-2"), play2Up, play2Down)
    $("button.flow").removeAttr("disabled")
    if (ui.draggable.hasClass("shot-down")){
      addMoveFeint("#active-1", ui)
    }
  }

  var play1Down = function() {
    $("#play-2").removeClass("phased slot")
    $("#play-2").droppable('destroy')
    $("button.flow").attr("disabled", "disabled")
    $("#active-1 nav").addClass("hidden")
    if ($("#active-1 .move").hasClass("not-chosen")){
      $("#active-1 .move").click()
    }

    play2Down()
  }

  var play2Up = function(event, ui) {
    $(".warning").removeClass("hidden")

    if (ui.draggable.hasClass("shot-down")){
      addMoveFeint("#active-2", ui)
    }
  }

  var play2Down = function() {
    $(".warning").addClass("hidden")
    $("#active-2 nav").addClass("hidden")
    if ($("#active-2 .move").hasClass("not-chosen")){
      $("#active-2 .move").click()
    }

  }

  var phaseDiscard = function() {
    dropify($(".discard"), discardUp, discardDown)
  }

  var addMoveFeint = function(target, ui) {
    $(target + " nav").removeClass("hidden")
    $(target + " button").on("click", swapActive)

    if (ui.draggable.attr("data-info").slice(2) == "forward"){
      $(target + " .move").addClass("up")
    } else {
      $(target + " .move").addClass("down")
    }
  }

  var swapActive = function(event) {
    if ($(event.target).hasClass("not-chosen")){
      $(event.target).siblings().addBack().toggleClass("chosen not-chosen")
      if ($(event.target).hasClass("feint")){
        $(event.target).parent().siblings().css("opacity", 0.5)
      } else {
        $(event.target).parent().siblings().css("opacity", 1.0)
      }
    }
  }

  var dropify = function($el, dropHandler, outHandler) {
    $el.addClass("phased slot")
    $el.droppable({
      drop: dropHandler,
      out: outHandler
    })
  }

  return {
    display: display,
    activate: activate
  };
})();

$(function(){
  Game.activate("<%= @game.phase %>");
  Game.display();
})
</script>